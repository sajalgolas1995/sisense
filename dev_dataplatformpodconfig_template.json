{
  "podId": "@@ENV_NAME@@",
  "purpose": "$ENV_PURPOSE",
  "configTimeOut": 14400,
  "version": "@@RDP_VERSION@@",
  "tag": "Make Data Matter",
  "instanceType": "dev",
  "timezone": "America/Chicago",
  "logLevel": "info",
  "contextDelimiter": "/",
  "isCacheEnabled": false,
  "isModelCoalesceCacheEnabled": false,
  "allowableDelayBeforeRevalidateCreateActionInMs": 60000,
  "isSortValidationEnabled": true,
  "cacheType": "local",
  "cacheExpirationType": "timeBased",
  "maxCacheEntries": 1000,
  "cacheExpirationMs": "3600000",
  "maxResultWindow": 30000,
  "searchContextKeepAliveTime": "120000",
  "isMetricsEnabled": false,
  "defaultValueLocale": "en-US",
  "defaultValueSource": "internal",
  "dataSizeThreshold":{
    "externalDataSizeWarnLimit": 500006,
    "externalDataSizeErrorLimit": 1000012,
    "internalDataSizeWarnLimit": 1000012,
    "internalDataSizeErrorLimit": 2000024
  },
  "services": {
    "adminService": {
      "serviceSpecific": {
        "logLevel": "info"
      },
      "platformSpecific": {
        "restApi": {
          "actions": {
            "deploytenant": {
              "className": "com.riversand.dataplatform.ds.adminsvc.AdminServiceManagerBL",
              "methodName": "deployTenant"
            },
            "deploytopology": {
              "className": "com.riversand.dataplatform.ds.adminsvc.AdminServiceManagerBL",
              "methodName": "deployTopology"
            },
            "deployplatformseed": {
              "className": "com.riversand.dataplatform.ds.adminsvc.AdminServiceManagerBL",
              "methodName": "deployPlatformSeedData"
            },
            "deploytenantseed": {
              "className": "com.riversand.dataplatform.ds.adminsvc.AdminServiceManagerBL",
              "methodName": "deployTenantSeedData"
            },
            "deployartifact": {
              "className": "com.riversand.dataplatform.ds.adminsvc.AdminServiceManagerBL",
              "methodName": "deployArtifact"
            },
            "persistartifact": {
              "className": "com.riversand.dataplatform.ds.adminsvc.AdminServiceManagerBL",
              "methodName": "persistArtifact"
            }
          }
        },
        "messageBroker": {
          "domains": {
            "adminmanage": {
              "topics": {
                "inboundTopic": "rdpadminmanageinbound"
              }
            }
          }
        },
        "computeSystem": {
          "parallelisms": {
            "adminmanage-reader": 1,
            "adminmanage-reader-max-spout-pending": 10,
            "adminmanage-bolt": 1,
            "noOfWorkers": 1
          }
        }
      }
    },
    "authorizationService": {
      "serviceSpecific": {
        "logLevel": "info",
        "defaultMaxRecords": 100
      },
      "platformSpecific": {
        "restApi": {
          "actions": {
            "computerole": {
              "className": "com.riversand.dataplatform.ds.authorizationsvc.AuthorizationManagerBL",
              "methodName": "computeRole"
            },
            "computeauthorizationmodels": {
              "className": "com.riversand.dataplatform.ds.authorizationsvc.AuthorizationManagerBL",
              "methodName": "computeAuthorizationModels"
            }
          }
        }
      }
    },
    "bulkEntityService": {
      "serviceSpecific": {
        "logLevel": "info"
      },
      "platformSpecific": {
        "restApi": {
          "actions": {
            "createtask": {
              "className": "com.riversand.dataplatform.bs.entitysvc.BulkEntityServiceManagerBL",
              "methodName": "createTask"
            }
          }
        }
      }
    },
    "bulkEventService": {
      "serviceSpecific": {},
      "platformSpecific": {
        "restApi": {
          "actions": {
            "createtask": {
              "className": "com.riversand.dataplatform.bs.eventsvc.BulkEventServiceManagerBL",
              "methodName": "createTask"
            }
          }
        }
      }
    },
    "bulkRequestService": {
      "serviceSpecific": {
        "logLevel": "info"
      },
      "platformSpecific": {
        "restApi": {
          "actions": {
            "createtask": {
              "className": "com.riversand.dataplatform.bs.requestsvc.BulkRequestServiceManagerBL",
              "methodName": "createTask"
            }
          }
        }
      }
    },
    "bulkGenericService": {
      "serviceSpecific": {
        "logLevel": "info"
      },
      "platformSpecific": {
        "restApi": {
          "actions": {
            "createtask": {
              "className": "com.riversand.dataplatform.bs.genericsvc.BulkGenericServiceManagerBL",
              "methodName": "createTask"
            }
          }
        }
      }
    },
    "entityAppModelService": {
      "serviceSpecific": {
        "logLevel": "info",
        "enableSelfCoalesce": false
      },
      "platformSpecific": {
        "restApi": {
          "actions": {
            "get": {
              "className": "com.riversand.dataplatform.as.entitymodelsvc.EntityAppModelGetManagerBL",
              "methodName": "get"
            },
            "getcoalesce": {
              "className": "com.riversand.dataplatform.as.entitymodelsvc.EntityAppModelGetManagerBL",
              "methodName": "get"
            },
            "getcomposite": {
              "className": "com.riversand.dataplatform.as.entitymodelsvc.EntityAppModelGetManagerBL",
              "methodName": "getModelComposite"
            },
            "getcontext": {
              "className": "com.riversand.dataplatform.as.entitymodelsvc.EntityAppModelGetManagerBL",
              "methodName": "get"
            },
            "processcomposite": {
              "className": "com.riversand.dataplatform.as.entitymodelsvc.EntityAppModelManagerBL",
              "methodName": "processComposite"
            },
            "clearscroll": {
              "className": "com.riversand.dataplatform.as.entitymodelsvc.EntityAppModelGetManagerBL",
              "methodName": "clearScroll"
            },
            "getnearestcontext": {
              "className": "com.riversand.dataplatform.as.entitymodelsvc.EntityAppModelGetManagerBL",
              "methodName": "getNearestContext"
            },
            "getnearest": {
              "className": "com.riversand.dataplatform.as.entitymodelsvc.EntityAppModelGetManagerBL",
              "methodName": "get"
            }
          }
        }
      }
    },
    "entityAppService": {
      "serviceSpecific": {
        "logLevel": "info",
        "enableSelfCoalesce": false,
        "enableBulkInboundTopicType": false,
        "enableUIBulkInboundTopicType": false,
        "enableHotlineInboundTopicType": false,
        "enableMigrateInboundTopicType": true,
        "enableEventOutboundTopicType": true,
        "enableErrorOutboundTopicType": true,
        "isUOMResolutionEnabled": false,
        "isRelationshipResolutionEnabled": false,
        "migrationConfig":{
          "isReferenceResolutionEnabled" : true
        }
      },
      "platformSpecific": {
        "restApi": {
          "actions": {
            "process": {
              "className": "com.riversand.dataplatform.as.entitysvc.EntityAppServiceManagerBL",
              "methodName": "processEntity"
            },
            "create": {
              "className": "com.riversand.dataplatform.as.entitysvc.EntityAppServiceManagerBL",
              "methodName": "create"
            },
            "update": {
              "className": "com.riversand.dataplatform.as.entitysvc.EntityAppServiceManagerBL",
              "methodName": "update"
            },
            "delete": {
              "className": "com.riversand.dataplatform.as.entitysvc.EntityAppServiceManagerBL",
              "methodName": "delete"
            },
            "createsnapshot": {
              "className": "com.riversand.dataplatform.as.entitysvc.EntityAppServiceManagerBL",
              "methodName": "createSnapshot"
            },
            "deletesnapshot": {
              "className": "com.riversand.dataplatform.as.entitysvc.EntityAppServiceManagerBL",
              "methodName": "deleteSnapshot"
            },
            "restoresnapshot": {
              "className": "com.riversand.dataplatform.as.entitysvc.EntityAppServiceManagerBL",
              "methodName": "restoreSnapshot"
            },
            "get": {
              "className": "com.riversand.dataplatform.as.entitysvc.EntityAppGetServiceManagerBL",
              "methodName": "get"
            },
            "getcoalesce": {
              "className": "com.riversand.dataplatform.as.entitysvc.EntityAppGetServiceManagerBL",
              "methodName": "get"
            },
            "getcontext": {
              "className": "com.riversand.dataplatform.as.entitysvc.EntityAppGetServiceManagerBL",
              "methodName": "get"
            },
            "getcombined": {
              "className": "com.riversand.dataplatform.as.entitysvc.EntityAppGetServiceManagerBL",
              "methodName": "getcombined"
            },
            "getmappedvalues": {
              "className": "com.riversand.dataplatform.as.entitysvc.EntityAppGetServiceManagerBL",
              "methodName": "getMappedValues"
            },
            "getrelated": {
              "className": "com.riversand.dataplatform.as.entitysvc.EntityAppGetServiceManagerBL",
              "methodName": "getRelated"
            },
            "generatevariants": {
              "className": "com.riversand.dataplatform.as.entitysvc.EntityAppVariantManagerBL",
              "methodName": "generateVariants"
            },
            "getsnapshot": {
              "className": "com.riversand.dataplatform.as.entitysvc.EntityAppGetServiceManagerBL",
              "methodName": "getSnapshot"
            },
            "clearscroll": {
              "className": "com.riversand.dataplatform.as.entitysvc.EntityAppGetServiceManagerBL",
              "methodName": "clearScroll"
            },
            "getentityhistory": {
              "className": "com.riversand.dataplatform.as.entitysvc.EntityHistoryAppGetManagerBL",
              "methodName": "getEntityHistory"
            }
          }
        },
        "messageBroker": {
          "domains": {
            "entity": {
              "topics": {
                "inboundTopic": "rdpentityappmanageinbound",
                "bulkInboundTopic": "rdpentityappmanagebulkinbound",
                "uiBulkInboundTopic": "rdpentityappmanageuibulkinbound",
                "hotlineInboundTopic": "rdpentityappmanagehotlineinbound",
                "migrateInboundTopic": "rdpentityappmanagemigrateinbound"
              }
            },
            "entitymanageevent": {
              "topics": {
                "outboundTopic": "rdpeventinbound"
              }
            },
            "errorevent": {
              "topics": {
              }
            }
          }
        },
        "computeSystem": {
          "parallelisms": {
            "entityappmanage-reader": 1,
            "entityappmanage-reader-max-spout-pending": 20,
            "entityappmanage-hotline-reader": 1,
            "entityappmanage-hotline-reader-max-spout-pending": 20,
            "entityappmanage-migrate-reader": 1,
            "entityappmanage-migrate-reader-max-spout-pending": 20,
            "entityappmanage-bulk-reader": 1,
            "entityappmanage-bulk-reader-max-spout-pending": 20,
            "entityappmanage-uibulk-reader": 1,
            "entityappmanage-uibulk-reader-max-spout-pending": 20,
            "entityapp-action-bolt": 2,
            "entityapp-name-bolt": 2,
            "entityapp-relto-bolt": 2,
            "entityapp-reference-bolt": 4,
            "entityapp-variantgeneration-bolt" : 1,
            "noOfWorkers": 1
          },
          "environment": {
            "worker-options": "-Xmx1g"
          }
        }
      }
    },
    "entityManageService": {
      "serviceSpecific": {
        "logLevel": "info",
        "enableSelfCoalesce": false,
        "isCreateEventDataPersistenceEnabled": true,
        "defaultMaxRecords": 100,
        "defaultBatchSize": 1000,
        "requestOfRequestsDoneCriteria": {
          "entityManageService": [
            {
              "description": "User Manage Complete"
            },
            {
              "description": "System Manage Complete"
            }
          ],
          "entityGovernService": [
            {
              "description": "User Governance Complete"
            },
            {
              "description": "System Governance Complete"
            }
          ]
        },
        "enableSystemInboundTopicType": false,
        "enableBulkInboundTopicType": false,
        "enableUIBulkInboundTopicType": false,
        "enableBulkSystemInboundTopicType": false,
        "enableUIBulkSystemInboundTopicType": false,
        "enableHotlineInboundTopicType": false,
        "enableMigrateInboundTopicType": true,
        "isMigrationEnabled": false,
        "businessNamesForActors": {
          "EntityManagerBL": "ApiService",
          "BusinessRulePrepBolt": "ManageRulePreparation",
          "ManageRuleRunBolt": "ManageRuleRun",
          "EntityManageObjectOperationBolt": "ObjectStore",
          "EntityManagePersistenceBolt": "SearchStore"
        },
        "doneCriteria": [
          {
            "ApiService": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "error",
            "SearchStore": "success",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "success",
            "SearchStore": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "error",
            "SearchStore": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "success",
            "SearchStore": "success",
            "status": "success"
          }
        ],
        "migrationConfig":{
          "isEventPersistenceEnabled" : false
        }
      },
      "platformSpecific": {
        "messageBroker": {
          "domains": {
            "entity": {
              "topics": {
                "inboundTopic": "rdpentitymanageinbound",
                "bulkInboundTopic": "rdpentitymanagebulkinbound",
                "uiBulkInboundTopic": "rdpentitymanageuibulkinbound",
                "systemInboundTopic": "rdpentitymanagesysteminbound",
                "bulkSystemInboundTopic": "rdpentitymanagebulksysteminbound",
                "uiBulkSystemInboundTopic": "rdpentitymanageuibulksysteminbound",
                "hotlineInboundTopic": "rdpentitymanagehotlineinbound",
                "migrateInboundTopic": "rdpentitymanagemigrateinbound"
              }
            },
            "entitymanageevent": {
              "topics": {
                "outboundTopic": "rdpeventinbound"
              }
            },
            "errorevent": {
              "topics": {
              }
            }
          }
        },
        "computeSystem": {
          "parallelisms": {
            "entitymanage-reader": 1,
            "entitymanage-reader-max-spout-pending": 20,
            "entitymanage-system-reader": 1,
            "entitymanage-system-reader-max-spout-pending": 20,
            "entitymanage-bulk-reader": 1,
            "entitymanage-bulk-reader-max-spout-pending": 20,
            "entitymanage-bulksystem-reader": 1,
            "entitymanage-bulksystem-reader-max-spout-pending": 20,
            "entitymanage-uibulk-reader": 1,
            "entitymanage-uibulk-reader-max-spout-pending": 20,
            "entitymanage-uibulksystem-reader": 1,
            "entitymanage-uibulksystem-reader-max-spout-pending": 20,
            "entitymanage-hotline-reader": 1,
            "entitymanage-hotline-reader-max-spout-pending": 20,
            "entitymanage-migrate-reader": 1,
            "entitymanage-migrate-reader-max-spout-pending": 20,
            "entitymanage-validation-bolt": 2,
            "entitymanage-modelsend-bolt": 1,
            "entitymanage-comparison-bolt": 2,
            "entitymanage-business-rule-prep-bolt": 2,
            "entitymanage-business-rule-run-bolt": 4,
            "entitymanage-persist-bolt": 2,
            "entitymanage-objectoperation-bolt": 2,
            "entitymanage-complete-event-bolt": 1,
            "noOfWorkers": 1
          }
        },
        "eventSubscribers": [
          {
            "name": "EntityManageSubscriber",
            "description": "Riversand Data Platform entity govern connector for t1",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "entitymanageevent"
              }
            ]
          },
          {
            "name": "PushToStreamSubscriber",
            "description": "Riversand Data Platform event hub connector",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "entitymanageevent"
              }
            ]
          },
          {
            "name": "InternalEventManageSubscriber",
            "description": "Riversand Data Platform internal event connector for t1",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "entitymanagerequestsuccessevent"
              }
            ]
          },
          {
            "name": "InternalEventManageSubscriber",
            "description": "Riversand Data Platform internal event connector for t1",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "entitymanagerequesterrorevent"
              }
            ]
          }
        ],
        "notificationSubscribers": [
          {
            "name": "EntityManageNotificationSubscriber",
            "description": "Riversand Data Platform entity manage notification subscriber for t1",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "entitymanagenotificationevent"
              }
            ]
          }
        ]
      }
    },
    "snapshotManageService": {
      "serviceSpecific": {
        "logLevel": "info",
        "defaultMaxRecords": 100,
        "maxSnapshotCount": 5,
        "enableSystemInboundTopicType": false,
        "enableBulkInboundTopicType": false,
        "enableUIBulkInboundTopicType": false,
        "enableBulkSystemInboundTopicType": false,
        "enableUIBulkSystemInboundTopicType": false,
        "enableHotlineInboundTopicType": false,
        "enableMigrateInboundTopicType": true,
        "isMigrationEnabled": false,
        "businessNamesForActors": {
          "SnapshotManagerBL": "ApiService",
          "SnapshotObjectOperationBolt": "ObjectStore",
          "SnapshotPersistenceBolt": "SearchStore"
        },
        "doneCriteria": [
          {
            "ApiService": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "error",
            "SearchStore": "success",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "success",
            "SearchStore": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "error",
            "SearchStore": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "success",
            "SearchStore": "success",
            "status": "success"
          }
        ]
      },
      "platformSpecific": {
        "messageBroker": {
          "domains": {
            "snapshot": {
              "topics": {
                "inboundTopic": "rdpsnapshotmanageinbound",
                "bulkInboundTopic": "rdpsnapshotbulkinbound",
                "uiBulkInboundTopic": "rdpsnapshotuibulkinbound",
                "systemInboundTopic": "rdpsnapshotsysteminbound",
                "bulkSystemInboundTopic": "rdpsnapshotbulksysteminbound",
                "uiBulkSystemInboundTopic": "rdpsnapshotuibulksysteminbound",
                "hotlineInboundTopic": "rdpsnapshothotlineinbound",
                "migrateInboundTopic": "rdpsnapshotmigrateinbound"
              }
            },
            "entitymanageevent": {
              "topics": {
                "outboundTopic": "rdpeventinbound"
              }
            }
          }
        },
        "computeSystem": {
          "parallelisms": {
            "snapshotmanage-reader": 1,
            "snapshotmanage-reader-max-spout-pending": 10,
            "snapshotmanage-system-reader": 1,
            "snapshotmanage-system-reader-max-spout-pending": 10,
            "snapshotmanage-bulk-reader": 1,
            "snapshotmanage-bulk-reader-max-spout-pending": 10,
            "snapshotmanage-bulksystem-reader": 1,
            "snapshotmanage-bulksystem-reader-max-spout-pending": 10,
            "snapshotmanage-uibulk-reader": 1,
            "snapshotmanage-uibulk-reader-max-spout-pending": 10,
            "snapshotmanage-uibulksystem-reader": 1,
            "snapshotmanage-uibulksystem-reader-max-spout-pending": 10,
            "snapshotmanage-hotline-reader": 1,
            "snapshotmanage-hotline-reader-max-spout-pending": 10,
            "snapshotmanage-migrate-reader": 1,
            "snapshotmanage-migrate-reader-max-spout-pending": 10,
            "snapshotmanage-prep-bolt": 1,
            "snapshotmanage-persist-bolt": 1,
            "snapshotmanage-objectoperation-bolt": 1,
            "snapshotmanage-entityeventsend-bolt": 1,
            "noOfWorkers": 1
          }
        },
        "restApi": {
          "actions": {
            "get": {
              "className": "com.riversand.dataplatform.ds.snapshotmanagesvc.SnapshotGetManagerBL",
              "methodName": "get"
            },
            "create": {
              "className": "com.riversand.dataplatform.ds.snapshotmanagesvc.SnapshotManagerBL",
              "methodName": "create"
            },
            "delete": {
              "className": "com.riversand.dataplatform.ds.snapshotmanagesvc.SnapshotManagerBL",
              "methodName": "delete"
            }
          }
        }
      }
    },
    "entityService": {
      "serviceSpecific": {
        "logLevel": "info",
        "enableSelfCoalesce": false,
        "businessNamesForActors": {
          "EntityManagerBL": "ApiService",
          "EntityManageObjectOperationBolt": "ObjectStore",
          "EntityManageSearchOperationBolt": "SearchStore"
        },
        "doneCriteria": [
          {
            "ApiService": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "error",
            "SearchStore": "success",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "success",
            "SearchStore": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "error",
            "SearchStore": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "success",
            "SearchStore": "success",
            "status": "success"
          }
        ]
      },
      "platformSpecific": {
        "restApi": {
          "actions": {
            "get": {
              "className": "com.riversand.dataplatform.ds.entitysvc.EntityGetBL",
              "methodName": "get"
            },
            "getcoalesce": {
              "className": "com.riversand.dataplatform.ds.entitysvc.EntityGetBL",
              "methodName": "get"
            },
            "getcontext": {
              "className": "com.riversand.dataplatform.ds.entitysvc.EntityGetBL",
              "methodName": "get"
            },
            "getnearest": {
              "className": "com.riversand.dataplatform.ds.entitysvc.EntityGetBL",
              "methodName": "get"
            },
            "create": {
              "className": "com.riversand.dataplatform.ds.entitysvc.EntityBL",
              "methodName": "create"
            },
            "update": {
              "className": "com.riversand.dataplatform.ds.entitysvc.EntityBL",
              "methodName": "update"
            },
            "delete": {
              "className": "com.riversand.dataplatform.ds.entitysvc.EntityBL",
              "methodName": "delete"
            }
          }
        }
      }
    },
    "entityGovernService": {
      "serviceSpecific": {
        "logLevel": "info",
        "defaultMaxRecords": 100,
        "enableSystemInboundTopicType": false,
        "enableBulkInboundTopicType": false,
        "enableUIBulkInboundTopicType": false,
        "enableBulkSystemInboundTopicType": false,
        "enableUIBulkSystemInboundTopicType": false,
        "enableHotlineInboundTopicType": false,
        "enableMigrateInboundTopicType": true,
        "isEventPersistenceFilterEnabled": false,
        "eventPersistFilters": {
          "attributes": [
            "_ALL"
          ],
          "contexts": [
            {
              "taxonomy": "_ALL",
              "classification": "_ALL"
            }
          ]
        },
        "businessNamesForActors": {
          "EntityGovernManagerBL": "ApiService",
          "BusinessRulePrepBolt": "GovernRulePreparation",
          "GovernRuleRunBolt": "GovernRuleRun",
          "EntityManageObjectOperationBolt": "ObjectStore",
          "EntityCompareAndProcessBolt": "SearchStore"
        },
        "doneCriteria": [
          {
            "ApiService": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "error",
            "SearchStore": "success",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "success",
            "SearchStore": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "error",
            "SearchStore": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "success",
            "SearchStore": "success",
            "status": "success"
          }
        ],
        "migrationConfig" : {
          "isEventPersistenceEnabled" : false,
          "isEventPersistenceFilterEnabled" : false
        }
      },
      "platformSpecific": {
        "messageBroker": {
          "domains": {
            "entity": {
              "topics": {
                "inboundTopic": "rdpentitygoverninbound",
                "bulkInboundTopic": "rdpentitygovernbulkinbound",
                "uiBulkInboundTopic": "rdpentitygovernuibulkinbound",
                "systemInboundTopic": "rdpentitygovernsysteminbound",
                "bulkSystemInboundTopic": "rdpentitygovernbulksysteminbound",
                "uiBulkSystemInboundTopic": "rdpentitygovernuibulksysteminbound",
                "hotlineInboundTopic": "rdpentitygovernhotlineinbound",
                "migrateInboundTopic": "rdpentitygovernmigrateinbound"
              }
            },
            "entitygovernevent": {
              "topics": {
                "outboundTopic": "rdpeventinbound"
              }
            },
            "errorevent": {
              "topics": {
              }
            }
          }
        },
        "computeSystem": {
          "parallelisms": {
            "entitygovern-reader": 1,
            "entitygovern-reader-max-spout-pending": 20,
            "entitygovern-system-reader": 1,
            "entitygovern-system-reader-max-spout-pending": 20,
            "entitygovern-bulk-reader": 1,
            "entitygovern-bulk-reader-max-spout-pending": 20,
            "entitygovern-bulksystem-reader": 1,
            "entitygovern-bulksystem-reader-max-spout-pending": 20,
            "entitygovern-uibulk-reader": 1,
            "entitygovern-uibulk-reader-max-spout-pending": 20,
            "entitygovern-uibulksystem-reader": 1,
            "entitygovern-uibulksystem-reader-max-spout-pending": 20,
            "entitygovern-hotline-reader": 1,
            "entitygovern-hotline-reader-max-spout-pending": 20,
            "entitygovern-migrate-reader": 1,
            "entitygovern-migrate-reader-max-spout-pending": 20,
            "entitygovern-bolt": 1,
            "entitygovern-rule-prep-bolt": 2,
            "entitygovern-rule-run-bolt": 4,
            "entitygovern-compareandprocess-bolt": 4,
            "entitygovern-objectoperation-bolt": 4,
            "entitygovern-complete-event-bolt": 1,
            "noOfWorkers": 1
          }
        },
        "eventSubscribers": [
          {
            "name": "PushToStreamSubscriber",
            "description": "Riversand Data Platform event hub connector",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "entitygovernevent"
              }
            ]
          },
          {
            "name": "EntityGovernSubscriber",
            "description": "Riversand Data Platform entity manage connector for t1",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "entitygovernevent"
              }
            ]
          },
          {
            "name": "InternalEventManageSubscriber",
            "description": "Riversand Data Platform internal event connector for t1",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "entitygovernrequestsuccessevent"
              }
            ]
          },
          {
            "name": "InternalEventManageSubscriber",
            "description": "Riversand Data Platform internal event connector for t1",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "entitygovernrequesterrorevent"
              }
            ]
          }
        ],
        "restApi": {
          "actions": {
            "get": {
              "className": "com.riversand.dataplatform.ds.entitygovernsvc.EntityGovernGetManagerBL",
              "methodName": "get"
            },
            "create": {
              "className": "com.riversand.dataplatform.ds.entitygovernsvc.EntityGovernManagerBL",
              "methodName": "create"
            },
            "update": {
              "className": "com.riversand.dataplatform.ds.entitygovernsvc.EntityGovernManagerBL",
              "methodName": "update"
            },
            "delete": {
              "className": "com.riversand.dataplatform.ds.entitygovernsvc.EntityGovernManagerBL",
              "methodName": "delete"
            },
            "reevaluate": {
              "className": "com.riversand.dataplatform.ds.entitygovernsvc.EntityGovernManagerBL",
              "methodName": "reevaluate"
            },
            "startWorkflow": {
              "className": "com.riversand.dataplatform.ds.entitygovernsvc.EntityWorkflowManagerBL",
              "methodName": "start"
            },
            "transitionWorkflow": {
              "className": "com.riversand.dataplatform.ds.entitygovernsvc.EntityWorkflowManagerBL",
              "methodName": "transition"
            },
            "workflowChangeAssignment": {
              "className": "com.riversand.dataplatform.ds.entitygovernsvc.EntityWorkflowManagerBL",
              "methodName": "changeAssignment"
            },
            "evaluateWorkflowCriteria": {
              "className": "com.riversand.dataplatform.ds.entitygovernsvc.EntityWorkflowManagerBL",
              "methodName": "evaluateWorkflowCriteria"
            },
            "validate": {
              "className": "com.riversand.dataplatform.ds.entitygovernsvc.EntityGovernManagerBL",
              "methodName": "validate"
            },
            "terminateWorkflowInstance": {
              "className": "com.riversand.dataplatform.ds.entitygovernsvc.EntityWorkflowManagerBL",
              "methodName": "terminateWorkflowInstance"
            },
            "deleteEntityFromWorkflow": {
              "className": "com.riversand.dataplatform.ds.entitygovernsvc.EntityWorkflowManagerBL",
              "methodName": "deleteEntityFromWorkflow"
            },
            "deleteEntityFromAllWorkflows": {
              "className": "com.riversand.dataplatform.ds.entitygovernsvc.EntityWorkflowManagerBL",
              "methodName": "deleteEntityFromAllWorkflows"
            },
            "getUserNameForAutoAssignment": {
              "className": "com.riversand.dataplatform.ds.entitygovernsvc.EntityWorkflowManagerBL",
              "methodName": "getUserNameForAutoAssignment"
            },
            "clearscroll": {
              "className": "com.riversand.dataplatform.ds.entitygovernsvc.EntityGovernGetManagerBL",
              "methodName": "clearScroll"
            }
          }
        }
      }
    },
    "entityGraphManageService": {
      "serviceSpecific": {
        "logLevel": "info",
        "defaultMaxRecords": 500,
        "checkForNoChange": false,
        "enableSystemInboundTopicType": false,
        "enableBulkInboundTopicType": false,
        "enableUIBulkInboundTopicType": false,
        "enableBulkSystemInboundTopicType": false,
        "enableUIBulkSystemInboundTopicType": false,
        "enableHotlineInboundTopicType": false,
        "enableMigrateInboundTopicType": true,
        "businessNamesForActors": {
          "EntityGraphManagerBL": "ApiService",
          "EntityGraphCompareAndProcessBolt": "SearchStore",
          "EntityGraphIdentificationBolt": "Entity Graph Identification"
        },
        "doneCriteria": [
          {
            "ApiService": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "SearchStore": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "SearchStore": "success",
            "status": "success"
          }
        ]
      },
      "platformSpecific": {
        "messageBroker": {
          "domains": {
            "entity": {
              "topics": {
                "inboundTopic": "rdpentitygraphinbound",
                "bulkInboundTopic": "rdpentitygraphbulkinbound",
                "uiBulkInboundTopic": "rdpentitygraphuibulkinbound",
                "systemInboundTopic": "rdpentitygraphsysteminbound",
                "bulkSystemInboundTopic": "rdpentitygraphbulksysteminbound",
                "uiBulkSystemInboundTopic": "rdpentitygraphuibulksysteminbound",
                "hotlineInboundTopic": "rdpentitygraphhotlineinbound",
                "migrateInboundTopic": "rdpentitygraphmigrateinbound"
              }
            },
            "entitygraphevent": {
              "topics": {
                "outboundTopic": "rdpeventinbound"
              }
            },
            "errorevent": {
              "topics": {
              }
            }
          }
        },
        "computeSystem": {
          "parallelisms": {
            "entitygraph-reader": 1,
            "entitygraph-reader-max-spout-pending": 10,
            "entitygraph-system-reader": 1,
            "entitygraph-system-reader-max-spout-pending": 10,
            "entitygraph-hotline-reader": 1,
            "entitygraph-hotline-reader-max-spout-pending": 10,
            "entitygraph-bulk-reader": 1,
            "entitygraph-bulk-reader-max-spout-pending": 10,
            "entitygraph-bulksystem-reader": 1,
            "entitygraph-bulksystem-reader-max-spout-pending": 10,
            "entitygraph-uibulk-reader": 1,
            "entitygraph-uibulk-reader-max-spout-pending": 10,
            "entitygraph-uibulksystem-reader": 1,
            "entitygraph-uibulksystem-reader-max-spout-pending": 10,
            "entitygraph-migrate-reader": 1,
            "entitygraph-migrate-reader-max-spout-pending": 10,
            "entitygraph-bolt": 1,
            "entitygraphpreparation-bolt": 1,
            "entitygraphidentification-bolt": 1,
            "entitygraphcompareandprocess-bolt": 2,
            "entitygraph-graphcompleteeventcreate-bolt": 1,
            "noOfWorkers": 1
          }
        },
        "eventSubscribers": [
          {
            "name": "EntityGraphSubscriber",
            "description": "Riversand Data Platform entity manage connector for t1",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "entitygraphevent"
              }
            ]
          },
          {
            "name": "InternalEventManageSubscriber",
            "description": "Riversand Data Platform internal event connector for t1",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "entitygraphrequestsuccessevent"
              }
            ]
          },
          {
            "name": "InternalEventManageSubscriber",
            "description": "Riversand Data Platform internal event connector for t1",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "entitygraphrequesterrorevent"
              }
            ]
          }
        ],
        "restApi": {
          "actions": {
            "create": {
              "className": "com.riversand.dataplatform.ds.entitygraphcomputesvc.EntityGraphManagerBL",
              "methodName": "create"
            }
          }
        }
      }
    },
    "entityPostProcessService": {
      "serviceSpecific": {
        "logLevel": "info",
        "enableSystemInboundTopicType": false,
        "enableBulkInboundTopicType": false,
        "enableUIBulkInboundTopicType": false,
        "enableBulkSystemInboundTopicType": false,
        "enableUIBulkSystemInboundTopicType": false,
        "enableHotlineInboundTopicType": false,
        "enableMigrateInboundTopicType": true,
        "businessNamesForActors": {
          "EntityManagerBL": "ApiService",
          "BusinessRulePrepBolt": "PostProcessRulePreparation",
          "PostProcessRuleRunBolt": "PostProcessRuleRun"
        },
        "doneCriteria": [
          {
            "ApiService": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "PostProcessRulePreparation": "error",
            "PostProcessRuleRun": "success",
            "status": "error"
          },
          {
            "ApiService": "success",
            "PostProcessRulePreparation": "success",
            "PostProcessRuleRun": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "PostProcessRulePreparation": "error",
            "PostProcessRuleRun": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "PostProcessRulePreparation": "success",
            "PostProcessRuleRun": "success",
            "status": "success"
          }
        ]
      },
      "platformSpecific": {
        "messageBroker": {
          "domains": {
            "entity": {
              "topics": {
                "inboundTopic": "rdpentitypostprocessinbound",
                "bulkInboundTopic": "rdpentitypostprocessbulkinbound",
                "uiBulkInboundTopic": "rdpentitypostprocessuibulkinbound",
                "systemInboundTopic": "rdpentitypostprocesssysteminbound",
                "bulkSystemInboundTopic": "rdpentitypostprocessbulksysteminbound",
                "uiBulkSystemInboundTopic": "rdpentitypostprocessuibulksysteminbound",
                "hotlineInboundTopic": "rdpentitypostprocesshotlineinbound",
                "migrateInboundTopic": "rdpentitypostprocessmigrateinbound"
              }
            },
            "entitypostprocessevent": {
              "topics": {
                "outboundTopic": "rdpeventinbound"
              }
            },
            "errorevent": {
              "topics": {
              }
            }
          }
        },
        "computeSystem": {
          "parallelisms": {
            "entitypostprocess-reader": 1,
            "entitypostprocess-reader-max-spout-pending": 20,
            "entitypostprocess-system-reader": 1,
            "entitypostprocess-system-reader-max-spout-pending": 20,
            "entitypostprocess-hotline-reader": 1,
            "entitypostprocess-hotline-reader-max-spout-pending": 20,
            "entitypostprocess-bulk-reader": 1,
            "entitypostprocess-bulk-reader-max-spout-pending": 20,
            "entitypostprocess-bulksystem-reader": 1,
            "entitypostprocess-bulksystem-reader-max-spout-pending": 20,
            "entitypostprocess-uibulk-reader": 1,
            "entitypostprocess-uibulk-reader-max-spout-pending": 20,
            "entitypostprocess-uibulksystem-reader": 1,
            "entitypostprocess-uibulksystem-reader-max-spout-pending": 20,
            "entitypostprocess-migrate-reader": 1,
            "entitypostprocess-migrate-reader-max-spout-pending": 20,
            "entitypostprocess-bolt": 1,
            "entitypostprocess-business-rule-prep-bolt": 2,
            "entitypostprocess-business-rule-run-bolt": 4,
            "entitypostprocess-completeevent-create-bolt": 1,
            "noOfWorkers": 1
          }
        },
        "eventSubscribers": [
          {
            "name": "EntityPostProcessSubscriber",
            "description": "Riversand Data Platform entity post process connector",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "entitypostprocessevent"
              }
            ]
          },
          {
            "name": "InternalEventManageSubscriber",
            "description": "Riversand Data Platform internal event connector for t1",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "entitypostprocessrequestsuccessevent"
              }
            ]
          },
          {
            "name": "InternalEventManageSubscriber",
            "description": "Riversand Data Platform internal event connector for t1",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "entitypostprocessrequesterrorevent"
              }
            ]
          }
        ]
      }
    },
    "eventManageService": {
      "serviceSpecific": {
        "logLevel": "info",
        "defaultMaxRecords": 100,
        "enableBulkInboundTopicType": false,
        "enableUIBulkInboundTopicType": false,
        "enableSystemInboundTopicType": false,
        "enableBulkSystemInboundTopicType": false,
        "enableUIBulkSystemInboundTopicType": false,
        "enableHotlineInboundTopicType": false,
        "enableMigrateInboundTopicType": true,
        "enableBulkSystemGroomingInboundTopicType": true
      },
      "platformSpecific": {
        "restApi": {
          "actions": {
            "get": {
              "className": "com.riversand.dataplatform.ds.eventmanagesvc.EventGetManagerBL",
              "methodName": "get"
            },
            "create": {
              "className": "com.riversand.dataplatform.ds.eventmanagesvc.EventManagerBL",
              "methodName": "create"
            },
            "delete": {
              "className": "com.riversand.dataplatform.ds.eventmanagesvc.EventManagerBL",
              "methodName": "delete"
            },
            "deletebyquery": {
              "className": "com.riversand.dataplatform.ds.eventmanagesvc.EventDeleteManagerBL",
              "methodName": "deleteByQuery"
            },
            "clearscroll": {
              "className": "com.riversand.dataplatform.ds.eventmanagesvc.EventGetManagerBL",
              "methodName": "clearScroll"
            }
          }
        },
        "messageBroker": {
          "domains": {
            "entitymanageevent": {
              "topics": {
                "inboundTopic": "rdpeventinbound",
                "bulkInboundTopic": "rdpeventbulkinbound",
                "uiBulkInboundTopic": "rdpeventuibulkinbound",
                "systemInboundTopic": "rdpeventsysteminbound",
                "bulkSystemInboundTopic": "rdpeventbulksysteminbound",
                "uiBulkSystemInboundTopic": "rdpeventuibulksysteminbound",
                "hotlineInboundTopic": "rdpeventhotlineinbound",
                "migrateInboundTopic": "rdpeventmigrateinbound",
                "bulkSystemGroomingInboundTopic": "rdpeventbulksystemgroominginbound"
              }
            },
            "errorevent": {
              "topics": {
              }
            }
          }
        },
        "computeSystem": {
          "parallelisms": {
            "eventmanage-reader": 1,
            "eventmanage-reader-max-spout-pending": 50,
            "eventmanage-system-reader": 1,
            "eventmanage-system-reader-max-spout-pending": 50,
            "eventmanage-bulk-reader": 1,
            "eventmanage-bulk-reader-max-spout-pending": 50,
            "eventmanage-bulksystem-reader": 1,
            "eventmanage-bulksystem-reader-max-spout-pending": 50,
            "eventmanage-uibulk-reader": 1,
            "eventmanage-uibulk-reader-max-spout-pending": 50,
            "eventmanage-uibulksystem-reader": 1,
            "eventmanage-uibulksystem-reader-max-spout-pending": 50,
            "eventmanage-hotline-reader": 1,
            "eventmanage-hotline-reader-max-spout-pending": 50,
            "eventmanage-migrate-reader": 1,
            "eventmanage-migrate-reader-max-spout-pending": 50,
            "eventmanage-bolt": 4,
            "eventmanage-searchcreate-bolt": 4,
            "eventmanage-searchbulkcreate-bolt": 1,
            "eventmanage-objectoperation-bolt": 2,
            "eventmanage-objectbulkcreate-bolt": 4,
            "eventmanage-subscriber-dispatcher-bolt": 2,
            "noOfWorkers": 1
          }
        }
      }
    },
    "externalEventManageService": {
      "serviceSpecific": {
        "logLevel": "info",
        "defaultMaxRecords": 100,
        "enableBulkInboundTopicType": false,
        "enableUIBulkInboundTopicType": false,
        "enableSystemInboundTopicType": false,
        "enableBulkSystemInboundTopicType": false,
        "enableUIBulkSystemInboundTopicType": false,
        "enableHotlineInboundTopicType": false,
        "enableTaskSummarization": false,
        "enableMigrateInboundTopicType": true,
        "enableBulkSystemGroomingInboundTopicType": true,
        "migrationConfig": {
          "isEventPersistenceEnabled": false
        }
      },
      "platformSpecific": {
        "messageBroker": {
          "domains": {
            "externalevent": {
              "topics": {
                "inboundTopic": "rdpexternaleventinbound",
                "bulkInboundTopic": "rdpexternaleventbulkinbound",
                "uiBulkInboundTopic": "rdpexternaleventuibulkinbound",
                "systemInboundTopic": "rdpexternaleventsysteminbound",
                "bulkSystemInboundTopic": "rdpexternaleventbulksysteminbound",
                "uiBulkSystemInboundTopic": "rdpexternaleventuibulksysteminbound",
                "hotlineInboundTopic": "rdpexternaleventhotlineinbound",
                "migrateInboundTopic": "rdpexternaleventmigrateinbound",
                "bulkSystemGroomingInboundTopic": "rdpexternaleventbulksystemgroominginbound"
              }
            },
            "errorevent": {
              "topics": {
              }
            }
          }
        },
        "computeSystem": {
          "parallelisms": {
            "eventmanage-reader": 1,
            "eventmanage-reader-max-spout-pending": 20,
            "eventmanage-system-reader": 1,
            "eventmanage-system-reader-max-spout-pending": 20,
            "eventmanage-bulk-reader": 1,
            "eventmanage-bulk-reader-max-spout-pending": 20,
            "eventmanage-bulksystem-reader": 1,
            "eventmanage-bulksystem-reader-max-spout-pending": 20,
            "eventmanage-uibulk-reader": 1,
            "eventmanage-uibulk-reader-max-spout-pending": 20,
            "eventmanage-uibulksystem-reader": 1,
            "eventmanage-uibulksystem-reader-max-spout-pending": 20,
            "eventmanage-hotline-reader": 1,
            "eventmanage-hotline-reader-max-spout-pending": 20,
            "eventmanage-migrate-reader": 1,
            "eventmanage-migrate-reader-max-spout-pending": 20,
            "eventmanage-bolt": 1,
            "eventmanage-searchcreate-bolt": 2,
            "eventmanage-objectoperation-bolt": 1,
            "eventmanage-subscriber-dispatcher-bolt": 1,
            "noOfWorkers": 1
          }
        },
        "eventSubscribers": [
          {
            "name": "TaskSummarizationSubscriber",
            "description": "Riversand Data Platform entity govern connector for t1",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "bulkoperationevent"
              },
              {
                "filterType": "include",
                "dataObjectType": "adminexternalevent"
              },
              {
                "filterType": "include",
                "dataObjectType": "variantgenerationevent"
              }
            ]
          }
        ]
      }
    },
    "errorEventManageService": {
      "serviceSpecific": {
        "logLevel": "info"
      },
      "platformSpecific": {
        "messageBroker": {
          "domains": {
            "errorevent": {
              "topics": {
                "inboundTopic": "rdperrorinbound"
              }
            }
          }
        },
        "computeSystem": {
          "parallelisms": {
            "erroreventmanage-reader": 1,
            "erroreventmanage-searchcreate-bolt": 1,
            "noOfWorkers": 1
          }
        }
      }
    },
    "securityService": {
      "serviceSpecific": {
      }
    },
    "entityManageModelService": {
      "serviceSpecific": {
        "logLevel": "info",
        "enableSelfCoalesce": false,
        "defaultMaxRecords": 100,
        "mergeAuthorizationModelsBatchSize": 100,
        "enableSystemInboundTopicType": false,
        "enableBulkInboundTopicType": false,
        "enableUIBulkInboundTopicType": false,
        "enableBulkSystemInboundTopicType": false,
        "enableUIBulkSystemInboundTopicType": false,
        "enableHotlineInboundTopicType": false,
        "enableMigrateInboundTopicType": true,
        "businessNamesForActors": {
          "EntityManageModelManagerBL": "ApiService",
          "EntityManageObjectOperationBolt": "ObjectStore",
          "EntityCompareAndProcessBolt": "SearchStore"
        },
        "doneCriteria": [
          {
            "ApiService": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "error",
            "SearchStore": "success",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "success",
            "SearchStore": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "error",
            "SearchStore": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "success",
            "SearchStore": "success",
            "status": "success"
          }
        ]
      },
      "platformSpecific": {
        "messageBroker": {
          "domains": {
            "entitymanagemodel": {
              "topics": {
                "inboundTopic": "rdpentitymanagemodelinbound",
                "bulkInboundTopic": "rdpentitymanagemodelbulkinbound",
                "uiBulkInboundTopic": "rdpentitymanagemodeluibulkinbound",
                "systemInboundTopic": "rdpentitymanagemodelsysteminbound",
                "bulkSystemInboundTopic": "rdpentitymanagemodelbulksysteminbound",
                "uiBulkSystemInboundTopic": "rdpentitymanagemodeluibulksysteminbound",
                "hotlineInboundTopic": "rdpentitymanagemodelhotlineinbound",
                "migrateInboundTopic": "rdpentitymanagemodelmigrateinbound"
              }
            },
            "entitymanagemodelevent": {
              "topics": {
                "outboundTopic": "rdpeventinbound"
              }
            },
            "errorevent": {
              "topics": {
              }
            }
          }
        },
        "computeSystem": {
          "parallelisms": {
            "entitymanagemodel-reader": 1,
            "entitymanagemodel-reader-max-spout-pending": 20,
            "entitymanagemodel-system-reader": 1,
            "entitymanagemodel-system-reader-max-spout-pending": 20,
            "entitymanagemodel-hotline-reader": 1,
            "entitymanagemodel-hotline-reader-max-spout-pending": 20,
            "entitymanagemodel-bulk-reader": 1,
            "entitymanagemodel-bulk-reader-max-spout-pending": 20,
            "entitymanagemodel-bulksystem-reader": 1,
            "entitymanagemodel-bulksystem-reader-max-spout-pending": 20,
            "entitymanagemodel-uibulk-reader": 1,
            "entitymanagemodel-uibulk-reader-max-spout-pending": 20,
            "entitymanagemodel-uibulksystem-reader": 1,
            "entitymanagemodel-uibulksystem-reader-max-spout-pending": 20,
            "entitymanagemodel-migrate-reader": 1,
            "entitymanagemodel-migrate-reader-max-spout-pending": 20,
            "entitymanagemodel-bolt": 1,
            "entitymanagemodel-compareandprocess-bolt": 4,
            "entitymanagemodel-objectoperation-bolt": 2,
            "entitymanagemodel-completeeventcreate-bolt": 1,
            "noOfWorkers": 1
          }
        },
        "eventSubscribers": [
          {
            "name": "UserModelSubscriber",
            "description": "Event subscriber for user model",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "entitymodelevent"
              }
            ]
          },
          {
            "name": "ImpactProcessSubscriber",
            "description": "Event subscriber for impact processing",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "entitymodelevent"
              }
            ]
          },
          {
            "name": "InternalEventManageSubscriber",
            "description": "Riversand Data Platform internal event connector for t1",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "entitymanagemodelrequestsuccessevent"
              }
            ]
          },
          {
            "name": "InternalEventManageSubscriber",
            "description": "Riversand Data Platform internal event connector for t1",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "entitymanagemodelrequesterrorevent"
              }
            ]
          },
          {
            "name": "PushToStreamSubscriber",
            "description": "Riversand Data Platform event hub connector for t1",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "entitymodelevent"
              }
            ]
          }
        ]
      }
    },
    "entityModelService": {
      "serviceSpecific": {
        "logLevel": "info",
        "enableSelfCoalesce": false,
        "businessNamesForActors": {
          "EntityManageModelManagerBL": "ApiService",
          "EntityManageObjectOperationBolt": "ObjectStore",
          "EntityManageSearchOperationBolt": "SearchStore"
        },
        "doneCriteria": [
          {
            "ApiService": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "error",
            "SearchStore": "success",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "success",
            "SearchStore": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "error",
            "SearchStore": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "success",
            "SearchStore": "success",
            "status": "success"
          }
        ]
      },
      "platformSpecific": {
        "restApi": {
          "actions": {
            "get": {
              "className": "com.riversand.dataplatform.ds.entitymodelsvc.EntityModelGetBL",
              "methodName": "get"
            },
            "create": {
              "className": "com.riversand.dataplatform.ds.entitymodelsvc.EntityModelBL",
              "methodName": "create"
            },
            "update": {
              "className": "com.riversand.dataplatform.ds.entitymodelsvc.EntityModelBL",
              "methodName": "update"
            },
            "delete": {
              "className": "com.riversand.dataplatform.ds.entitymodelsvc.EntityModelBL",
              "methodName": "delete"
            },
            "getcoalesce": {
              "className": "com.riversand.dataplatform.ds.entitymodelsvc.EntityModelGetBL",
              "methodName": "get"
            },
            "getcontext": {
              "className": "com.riversand.dataplatform.ds.entitymodelsvc.EntityModelGetBL",
              "methodName": "get"
            }
          }
        }
      }
    },
    "apiHostService": {
      "serviceSpecific": {
        "apiHost": {
          "serviceUrlPathToServiceName": {
            "authorizationservice": "authorizationService",
            "entityappmodelservice": "entityAppModelService",
            "entityappservice": "entityAppService",
            "entityservice": "entityService",
            "entitymodelservice": "entityModelService",
            "entitygovernservice": "entityGovernService",
            "requesttrackingservice": "requestManageService",
            "configurationservice": "configurationManageService",
            "binaryobjectservice": "binaryObjectManageService",
            "binarystreamobjectservice": "binaryStreamObjectService",
            "matchservice": "matchService",
            "eventservice": "eventManageService",
            "entitygraphservice": "entityGraphManageService",
            "bulkentityservice": "bulkEntityService",
            "genericobjectmanageservice": "genericObjectManageService",
            "notificationservice": "notificationManageService",
            "diagnosticservice": "diagnosticService",
            "schedulerservice": "scheduleObjectManageService",
            "adminservice": "adminService",
            "bulkeventservice": "bulkEventService",
            "bulkrequestservice": "bulkRequestService",
            "bulkgenericservice": "bulkGenericService",
            "impactmanageservice": "impactManageService",
            "modelgovernservice": "modelGovernService"
          }
        }
      }
    },
    "scheduleObjectManageService": {
      "serviceSpecific": {
        "logLevel": "info",
        "defaultMaxRecords": 100,
        "defaultDataTypes": {
          "scheduleDataObject": "scheduleobject",
          "eventDataObject": "event"
        },
        "businessNamesForActors": {
          "ScheduleObjectManagerBL": "ApiService",
          "ScheduleSearchStoreCreateBolt": "SearchStore"
        },
        "doneCriteria": [
          {
            "ApiService": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "SearchStore": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "SearchStore": "success",
            "status": "success"
          }
        ]
      },
      "platformSpecific": {
        "messageBroker": {
          "domains": {
            "scheduleobject": {
              "topics": {
                "inboundTopic": "rdpscheduleobjectinbound"
              }
            },
            "event": {
              "topics": {
                "inboundTopic": "rdpinternaleventinbound"
              }
            }
          }
        },
        "computeSystem": {
          "parallelisms": {
            "scheduleobjectmanage-reader": 1,
            "scheduleobjectmanage-reader-max-spout-pending": 10,
            "scheduleobjectmanage-process-bolt": 1,
            "scheduleobjectmanage-searchstore-bolt": 1,
            "scheduleobjectmanage-searchstore-event-bolt": 1,
            "scheduleobjectmanage-objectstore-bolt": 1,
            "scheduler-evaluate-bolt": 1,
            "scheduler-invoke-bolt": 1,
            "noOfWorkers": 1
          }
        },
        "restApi": {
          "actions": {
            "create": {
              "className": "com.riversand.dataplatform.ds.schedulemanagesvc.ScheduleObjectManagerBL",
              "methodName": "create"
            },
            "update": {
              "className": "com.riversand.dataplatform.ds.schedulemanagesvc.ScheduleObjectManagerBL",
              "methodName": "update"
            },
            "delete": {
              "className": "com.riversand.dataplatform.ds.schedulemanagesvc.ScheduleObjectManagerBL",
              "methodName": "delete"
            },
            "get": {
              "className": "com.riversand.dataplatform.ds.schedulemanagesvc.ScheduleObjectGetManagerBL",
              "methodName": "get"
            }
          }
        }
      }
    },
    "requestManageService": {
      "serviceSpecific": {
        "logLevel": "info",
        "defaultMaxRecords": 100,
        "enableSystemInboundTopicType": false,
        "enableBulkInboundTopicType": false,
        "enableUIBulkInboundTopicType": false,
        "enableBulkSystemInboundTopicType": false,
        "enableUIBulkSystemInboundTopicType": false,
        "enableHotlineInboundTopicType": false,
        "enableMigrateInboundTopicType": true,
        "enableBulkSystemGroomingInboundTopicType": true,
        "includeTaskDetails": false,
        "maxTaskDetails": 30000,
        "enableTaskSummarization": true,
        "defaultDataTypes": {
          "dataObject": "entity",
          "eventDataObject": "event",
          "internalEventDataObject": "internalEvent",
          "requestDataObject": "request"
        },
        "requestManage": {
          "_comment": "There are currently four levels, none, onlyError, basic, includeGetOperations",
          "trackingLevel": "basic",
          "includeDataObject": false
        }
      },
      "platformSpecific": {
        "messageBroker": {
          "domains": {
            "requestentity": {
              "topics": {
                "inboundTopic": "rdprequestmanageinbound",
                "bulkInboundTopic": "rdprequestmanagebulkinbound",
                "uiBulkInboundTopic": "rdprequestmanageuibulkinbound",
                "systemInboundTopic": "rdprequestmanagesysteminbound",
                "bulkSystemInboundTopic": "rdprequestmanagebulksysteminbound",
                "uiBulkSystemInboundTopic": "rdprequestmanageuibulksysteminbound",
                "hotlineInboundTopic": "rdprequestmanagehotlineinbound",
                "migrateInboundTopic": "rdprequestmanagemigrateinbound",
                "bulkSystemGroomingInboundTopic": "rdprequestmanagebulksystemgroominginbound"
              }
            },
            "requestevent": {
              "topics": {
                "inboundTopic": "rdpinternaleventinbound"
              }
            },
            "errorevent": {
              "topics": {
              }
            }
          }
        },
        "searchStore": {
          "domains": {
            "internalEventDataObject": {
              "objectTypes": {
                "internalEvent": {
                  "indices": {
                    "readIndex": "dataplatforminternaleventreadindex",
                    "writeIndex": "dataplatforminternaleventwriteindex"
                  }
                }
              }
            },
            "requestDataObject": {
              "objectTypes": {
                "request": {
                  "indices": {
                    "readIndex": "dataplatformrequestobjectreadindex",
                    "writeIndex": "dataplatformrequestobjectwriteindex"
                  }
                },
                "requestofrequestsobject": {
                  "indices": {
                    "readIndex": "dataplatformrequestobjectreadindex",
                    "writeIndex": "dataplatformrequestobjectwriteindex"
                  }
                }
              }
            }
          }
        },
        "objectStore": {
          "domains": {
            "internalEventDataObject": {
              "objectTypes": {
                "internalEvent": {
                  "storageProvider": {
                    "storageProviderId": "defaultHbaseStore",
                    "configProperties": {
                      "objectKeyPrefix": "dataplatforminternalevent/",
                      "legacyContainerName": "dataplatforminternaleventwritetable"
                    }
                  }
                }
              }
            },
            "requestDataObject": {
              "objectTypes": {
                "request": {
                  "storageProvider": {
                    "storageProviderId": "defaultHbaseStore",
                    "configProperties": {
                      "objectKeyPrefix": "dataplatformrequestobject/",
                      "legacyContainerName": "dataplatformrequestobjectwritetable"
                    }
                  }
                },
                "requestofrequestsobject": {
                  "storageProvider": {
                    "storageProviderId": "defaultHbaseStore",
                    "configProperties": {
                      "objectKeyPrefix": "dataplatformrequestofrequestsobject/",
                      "legacyContainerName": "dataplatformrequestofrequestsobjectwritetable"
                    }
                  }
                }
              }
            }
          }
        },
        "computeSystem": {
          "parallelisms": {
            "requestmanage-reader": 1,
            "requestmanage-reader-max-spout-pending": 50,
            "requestmanage-system-reader": 1,
            "requestmanage-system-reader-max-spout-pending": 50,
            "requestmanage-hotline-reader": 1,
            "requestmanage-hotline-reader-max-spout-pending": 50,
            "requestmanage-bulk-reader": 1,
            "requestmanage-bulk-reader-max-spout-pending": 50,
            "requestmanage-bulksystem-reader": 1,
            "requestmanage-bulksystem-reader-max-spout-pending": 50,
            "requestmanage-uibulk-reader": 1,
            "requestmanage-uibulk-reader-max-spout-pending": 50,
            "requestmanage-migrate-reader": 1,
            "requestmanage-migrate-reader-max-spout-pending": 50,
            "requestmanage-uibulksystem-reader": 1,
            "requestmanage-uibulksystem-reader-max-spout-pending": 50,
            "requestmanage-bolt": 1,
            "requestmanage-internaleventsearchcreate-bolt": 1,
            "requestmanage-internaleventobjectcreate-bolt": 1,
            "requestmanage-operation-bolt": 8,
            "requestmanage-requestofrequestsoperation-bolt": 4,
            "requestmanagedelete-bolt": 1,
            "noOfWorkers": 1
          }
        },
        "restApi": {
          "actions": {
            "get": {
              "className": "com.riversand.dataplatform.ds.requestmanagesvc.RequestObjectGetManagerBL",
              "methodName": "get"
            },
            "getparenttasksummary": {
              "className": "com.riversand.dataplatform.ds.requestmanagesvc.RequestObjectGetManagerBL",
              "methodName": "getParentTaskSummary"
            },
            "inspect": {
              "className": "com.riversand.dataplatform.ds.requestmanagesvc.RequestObjectGetManagerBL",
              "methodName": "inspect"
            },
            "create": {
              "className": "com.riversand.dataplatform.ds.requestmanagesvc.RequestObjectManagerBL",
              "methodName": "create"
            },
            "update": {
              "className": "com.riversand.dataplatform.ds.requestmanagesvc.RequestObjectManagerBL",
              "methodName": "update"
            },
            "delete": {
              "className": "com.riversand.dataplatform.ds.requestmanagesvc.RequestObjectManagerBL",
              "methodName": "delete"
            },
            "deletebyquery": {
              "className": "com.riversand.dataplatform.ds.requestmanagesvc.RequestDeleteManagerBL",
              "methodName": "deleteByQuery"
            },
            "clearscroll": {
              "className": "com.riversand.dataplatform.ds.requestmanagesvc.RequestObjectGetManagerBL",
              "methodName": "clearScroll"
            }
          }
        }
      }
    },
    "eventReportService": {
      "serviceSpecific": {
        "logLevel": "info",
        "defaultMaxRecords": 100,
        "enableSystemInboundTopicType": false,
        "enableBulkInboundTopicType": false,
        "enableUIBulkInboundTopicType": false,
        "enableBulkSystemInboundTopicType": false,
        "enableUIBulkSystemInboundTopicType": false,
        "enableHotlineInboundTopicType": false,
        "enableMigrateInboundTopicType": true,
        "includeTaskDetails": false,
        "maxTaskDetails": 30000,
        "updateInterval": 10,
        "isTimeCacheEnabled": true,
        "defaultDataTypes": {
          "dataObject": "eventreport",
          "eventDataObject": "event",
          "internalEventDataObject": "internalEvent",
          "requestDataObject": "request"
        }
      },
      "platformSpecific": {
        "messageBroker": {
          "domains": {
            "eventreport": {
              "topics": {
                "inboundTopic": "rdpeventreportinbound",
                "bulkInboundTopic": "rdpeventreportbulkinbound",
                "uiBulkInboundTopic": "rdpeventreportuibulkinbound",
                "systemInboundTopic": "rdpeventreportsysteminbound",
                "bulkSystemInboundTopic": "rdpeventreportbulksysteminbound",
                "uiBulkSystemInboundTopic": "rdpeventreportuibulksysteminbound",
                "hotlineInboundTopic": "rdpeventreporthotlineinbound",
                "migrateInboundTopic": "rdpeventreportmigrateinbound"
              }
            },
            "errorevent": {
              "topics": {
              }
            }
          }
        },
        "computeSystem": {
          "parallelisms": {
            "eventreport-reader": 1,
            "eventreport-reader-max-spout-pending": 20,
            "eventreport-system-reader": 1,
            "eventreport-system-reader-max-spout-pending": 20,
            "eventreport-hotline-reader": 1,
            "eventreport-hotline-reader-max-spout-pending": 20,
            "eventreport-bulk-reader": 1,
            "eventreport-bulk-reader-max-spout-pending": 20,
            "eventreport-bulksystem-reader": 1,
            "eventreport-bulksystem-reader-max-spout-pending": 20,
            "eventreport-uibulk-reader": 1,
            "eventreport-uibulk-reader-max-spout-pending": 20,
            "eventreport-uibulksystem-reader": 1,
            "eventreport-uibulksystem-reader-max-spout-pending": 20,
            "eventreport-migrate-reader": 1,
            "eventreport-migrate-reader-max-spout-pending": 20,
            "eventreport-bolt": 1,
            "eventreport-task-detail-bolt": 4,
            "eventreport-task-summarization-bolt": 4,
            "eventreport-tasksummary-conversion-bolt": 4,
            "eventreport-parent-task-summarization-bolt": 2,
            "noOfWorkers": 1
          }
        },
        "restApi": {
          "actions": {
            "create": {
              "className": "com.riversand.dataplatform.fs.eventmanagesvc.EventReportManagerBL",
              "methodName": "create"
            },
            "update": {
              "className": "com.riversand.dataplatform.fs.eventmanagesvc.EventReportManagerBL",
              "methodName": "update"
            }
          }
        }
      }
    },
    "notificationManageService": {
      "serviceSpecific": {
        "logLevel": "info",
        "defaultMaxRecords": 100,
        "enableSystemInboundTopicType": false,
        "enableBulkInboundTopicType": false,
        "enableUIBulkInboundTopicType": false,
        "enableBulkSystemInboundTopicType": false,
        "enableUIBulkSystemInboundTopicType": false,
        "enableHotlineInboundTopicType": false,
        "enableMigrateInboundTopicType": true,
        "isEmailNotificationEnabled": false,
        "userEmailNotificationEnabled": false,
        "email": "@@RIVERSAND_EMAIL_ID@@",
        "password": "@@RIVERSAND_EMAIL_PASSWD@@",
        "mail.smtp.auth": true,
        "mail.smtp.starttls.enable": true,
        "mail.smtp.host": "smtp-mail.outlook.com",
        "mail.smtp.port": 587,
        "defaultDataTypes": {
          "notificationDataObject": "notificationObject",
          "eventDataObject": "event"
        },
        "notificationManage": {
          "persistNotification": false,
          "sendNotificationToCallbackUrl": false,
          "notificationClients": [
            {
              "client": "rufClient",
              "restUri": "http://mdm-ui:5005/api/",
              "service": "notify",
              "action": "send"
            },
            {
              "client": "copClient",
              "restUri": "http://mdm-ui:5005/api/",
              "service": "notify",
              "action": "send"
            },
            {
              "client": "rapClient",
              "restUri": "http://mdm-ui:5005/api/",
              "service": "notify",
              "action": "send"
            }
          ]
        },
        "businessNamesForActors": {
          "NotificationManagerBL": "ApiService"
        }
      },
      "platformSpecific": {
        "messageBroker": {
          "domains": {
            "notificationevent": {
              "topics": {
                "inboundTopic": "rdpnotificationeventinbound",
                "bulkInboundTopic": "rdpnotificationeventbulkinbound",
                "uiBulkInboundTopic": "rdpnotificationeventuibulkinbound",
                "systemInboundTopic": "rdpnotificationeventsysteminbound",
                "bulkSystemInboundTopic": "rdpnotificationeventbulksysteminbound",
                "uiBulkSystemInboundTopic": "rdpnotificationeventuibulksysteminbound",
                "hotlineInboundTopic": "rdpnotificationeventhotlineinbound",
                "migrateInboundTopic": "rdpnotificationeventmigrateinbound"
              }
            },
            "errorevent": {
              "topics": {
              }
            }
          }
        },
        "searchStore": {
          "domains": {
            "notificationDataObject": {
              "objectTypes": {
                "notificationObject": {
                  "indices": {
                    "readIndex": "dataplatformreadindex",
                    "writeIndex": "dataplatformwriteindex"
                  }
                }
              }
            },
            "eventDataObject": {
              "objectTypes": {
                "event": {
                  "indices": {
                    "readIndex": "dataplatformeventreadindex",
                    "writeIndex": "dataplatformeventwriteindex"
                  }
                }
              }
            }
          }
        },
        "objectStore": {
          "domains": {
            "notificationDataObject": {
              "objectTypes": {
                "notificationObject": {
                  "storageProvider": {
                    "storageProviderId": "defaultHbaseStore",
                    "configProperties": {
                      "objectKeyPrefix": "dataplatform/",
                      "legacyContainerName": "dataplatformwritetable"
                    }
                  }
                }
              }
            },
            "eventDataObject": {
              "objectTypes": {
                "event": {
                  "storageProvider": {
                    "storageProviderId": "defaultHbaseStore",
                    "configProperties": {
                      "objectKeyPrefix": "dataplatformevent/",
                      "legacyContainerName": "dataplatformeventwritetable"
                    }
                  }
                }
              }
            }
          }
        },
        "computeSystem": {
          "parallelisms": {
            "notification-reader": 1,
            "notification-reader-max-spout-pending": 10,
            "notification-system-reader": 1,
            "notification-system-reader-max-spout-pending": 10,
            "notification-hotline-reader": 1,
            "notification-hotline-reader-max-spout-pending": 10,
            "notification-bulk-reader": 1,
            "notification-bulk-reader-max-spout-pending": 10,
            "notification-bulksystem-reader": 1,
            "notification-bulksystem-reader-max-spout-pending": 10,
            "notification-uibulk-reader": 1,
            "notification-uibulk-reader-max-spout-pending": 10,
            "notification-migrate-reader": 1,
            "notification-migrate-reader-max-spout-pending": 10,
            "notification-uibulksystem-reader": 1,
            "notification-uibulksystem-reader-max-spout-pending": 10,
            "notification-bolt": 1,
            "notification-send-bolt": 1,
            "notification-searchcreate-bolt": 1,
            "notification-objectcreate-bolt": 1,
            "noOfWorkers": 1
          }
        },
        "restApi": {
          "actions": {
            "notify": {
              "className": "com.riversand.dataplatform.ds.notificationmanagesvc.NotificationManagerBL",
              "methodName": "create"
            },
            "sendemail": {
              "className": "com.riversand.dataplatform.ds.notificationmanagesvc.NotificationManagerBL",
              "methodName": "sendEmail"
            }
          }
        }
      }
    },
    "configurationManageService": {
      "serviceSpecific": {
        "logLevel": "info",
        "defaultMaxRecords": 100,
        "enableSystemInboundTopicType": false,
        "enableBulkInboundTopicType": false,
        "enableUIBulkInboundTopicType": false,
        "enableBulkSystemInboundTopicType": false,
        "enableUIBulkSystemInboundTopicType": false,
        "enableHotlineInboundTopicType": false,
        "enableMigrateInboundTopicType": true,
        "defaultDataTypes": {
          "configDataObject": "configObject",
          "eventDataObject": "event",
          "internalEventDataObject": "internalEvent"
        },
        "configObjectManage": {
          "isConfigObjectManageEventsEnabled": false
        },
        "businessNamesForActors": {
          "ConfigurationManagerBL": "ApiService",
          "ConfigurationManageObjectOperationBolt": "ObjectStore",
          "ConfigurationManageSearchOperationBolt": "SearchStore"
        },
        "doneCriteria": [
          {
            "ApiService": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "error",
            "SearchStore": "success",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "success",
            "SearchStore": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "error",
            "SearchStore": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "success",
            "SearchStore": "success",
            "status": "success"
          }
        ]
      },
      "platformSpecific": {
        "messageBroker": {
          "domains": {
            "configurationmanage": {
              "topics": {
                "inboundTopic": "rdpconfigurationmanageinbound",
                "bulkInboundTopic": "rdpconfigurationmanagebulkinbound",
                "uiBulkInboundTopic": "rdpconfigurationmanageuibulkinbound",
                "systemInboundTopic": "rdpconfigurationmanagesysteminbound",
                "bulkSystemInboundTopic": "rdpconfigurationmanagebulksysteminbound",
                "uiBulkSystemInboundTopic": "rdpconfigurationmanageuibulksysteminbound",
                "hotlineInboundTopic": "rdpconfigurationmanagehotlineinbound",
                "migrateInboundTopic": "rdpconfigurationmanagemigrateinbound"
              }
            },
            "errorevent": {
              "topics": {
              }
            }
          }
        },
        "searchStore": {
          "domains": {
            "configDataObject": {
              "objectTypes": {
                "configObject": {
                  "indices": {
                    "readIndex": "dataplatformreadindex",
                    "writeIndex": "dataplatformwriteindex"
                  }
                },
                "tenantconfiglist": {
                  "indices": {
                    "readIndex": "dataplatformreadindex",
                    "writeIndex": "dataplatformwriteindex"
                  }
                },
                "tenantserviceconfig": {
                  "indices": {
                    "readIndex": "dataplatformreadindex",
                    "writeIndex": "dataplatformwriteindex"
                  }
                },
                "platformServiceConfig": {
                  "indices": {
                    "readIndex": "dataplatformreadindex",
                    "writeIndex": "dataplatformwriteindex"
                  }
                }
              }
            },
            "eventDataObject": {
              "objectTypes": {
                "event": {
                  "indices": {
                    "readIndex": "dataplatformeventreadindex",
                    "writeIndex": "dataplatformeventwriteindex"
                  }
                }
              }
            },
            "internalEventDataObject": {
              "objectTypes": {
                "internalEvent": {
                  "indices": {
                    "readIndex": "dataplatforminternaleventreadindex",
                    "writeIndex": "dataplatforminternaleventwriteindex"
                  }
                }
              }
            }
          }
        },
        "objectStore": {
          "domains": {
            "configDataObject": {
              "objectTypes": {
                "configObject": {
                  "storageProvider": {
                    "storageProviderId": "defaultHbaseStore",
                    "configProperties": {
                      "objectKeyPrefix": "dataplatform/",
                      "legacyContainerName": "dataplatformwritetable"
                    }
                  }
                },
                "tenantconfiglist": {
                  "storageProvider": {
                    "storageProviderId": "defaultHbaseStore",
                    "configProperties": {
                      "objectKeyPrefix": "dataplatform/",
                      "legacyContainerName": "dataplatformwritetable"
                    }
                  }
                },
                "tenantserviceconfig": {
                  "storageProvider": {
                    "storageProviderId": "defaultHbaseStore",
                    "configProperties": {
                      "objectKeyPrefix": "dataplatform/",
                      "legacyContainerName": "dataplatformwritetable"
                    }
                  }
                }
              }
            },
            "eventDataObject": {
              "objectTypes": {
                "event": {
                  "storageProvider": {
                    "storageProviderId": "defaultHbaseStore",
                    "configProperties": {
                      "objectKeyPrefix": "dataplatformevent/",
                      "legacyContainerName": "dataplatformeventwritetable"
                    }
                  }
                }
              }
            },
            "internalEventDataObject": {
              "objectTypes": {
                "internalEvent": {
                  "storageProvider": {
                    "storageProviderId": "defaultHbaseStore",
                    "configProperties": {
                      "objectKeyPrefix": "dataplatforminternalevent/",
                      "legacyContainerName": "dataplatforminternaleventwritetable"
                    }
                  }
                }
              }
            }
          }
        },
        "computeSystem": {
          "parallelisms": {
            "configmanage-reader": 1,
            "configmanage-reader-max-spout-pending": 20,
            "configmanage-system-reader": 1,
            "configmanage-system-reader-max-spout-pending": 20,
            "configmanage-hotline-reader": 1,
            "configmanage-hotline-reader-max-spout-pending": 20,
            "configmanage-migrate-reader": 1,
            "configmanage-migrate-reader-max-spout-pending": 20,
            "configmanage-bulk-reader": 1,
            "configmanage-bulk-reader-max-spout-pending": 20,
            "configmanage-bulksystem-reader": 1,
            "configmanage-bulksystem-reader-max-spout-pending": 20,
            "configmanage-uibulk-reader": 1,
            "configmanage-uibulk-reader-max-spout-pending": 20,
            "configmanage-uibulksystem-reader": 1,
            "configmanage-uibulksystem-reader-max-spout-pending": 20,
            "configmanage-bolt": 1,
            "configmanage-searchcreate-bolt": 4,
            "configmanage-updatezk-bolt": 1,
            "configmanage-objectcreate-bolt": 2,
            "configmanage-eventsend-bolt": 1,
            "noOfWorkers": 1
          }
        },
        "eventSubscribers": [
          {
            "name": "ImpactProcessSubscriber",
            "description": "Event subscriber for impact processing",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "configobjectmanageevent"
              }
            ]
          },
          {
            "name": "ConfigurationManageSubscriber",
            "description": "Riversand Data Platform internal event connector for t1",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "tenantserviceconfigchangeevent"
              }
            ]
          },
          {
            "name": "InternalEventManageSubscriber",
            "description": "Riversand Data Platform internal event connector for t1",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "configurationmanagerequestsuccessevent"
              }
            ]
          },
          {
            "name": "InternalEventManageSubscriber",
            "description": "Riversand Data Platform internal event connector for t1",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "configurationmanagerequesterrorevent"
              }
            ]
          }
        ],
        "restApi": {
          "actions": {
            "getnearest": {
              "className": "com.riversand.dataplatform.ds.configurationmanagesvc.ConfigObjectGetManagerBL",
              "methodName": "getNearest"
            },
            "get": {
              "className": "com.riversand.dataplatform.ds.configurationmanagesvc.ConfigObjectGetManagerBL",
              "methodName": "get"
            },
            "create": {
              "className": "com.riversand.dataplatform.ds.configurationmanagesvc.ConfigObjectManagerBL",
              "methodName": "create"
            },
            "update": {
              "className": "com.riversand.dataplatform.ds.configurationmanagesvc.ConfigObjectManagerBL",
              "methodName": "update"
            },
            "delete": {
              "className": "com.riversand.dataplatform.ds.configurationmanagesvc.ConfigObjectManagerBL",
              "methodName": "delete"
            },
            "getsources":
            {
              "className": "com.riversand.dataplatform.ds.configurationmanagesvc.ConfigObjectGetManagerBL",
              "methodName": "getsources"
            }
          }
        }
      }
    },
    "binaryObjectManageService": {
      "serviceSpecific": {
        "logLevel": "info",
        "defaultMaxRecords": 100,
        "enableSystemInboundTopicType": false,
        "enableBulkInboundTopicType": false,
        "enableUIBulkInboundTopicType": false,
        "enableBulkSystemInboundTopicType": false,
        "enableUIBulkSystemInboundTopicType": false,
        "enableHotlineInboundTopicType": false,
        "enableMigrateInboundTopicType": true,
        "externalDataSizeWarnLimit": 1000012,
        "externalDataSizeErrorLimit": 64000768,
        "businessNamesForActors": {
          "BinaryObjectManagerBL": "ApiService",
          "EntityManageObjectOperationBolt": "ObjectStore",
          "EntityManageSearchOperationBolt": "SearchStore"
        },
        "doneCriteria": [
          {
            "ApiService": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "error",
            "SearchStore": "success",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "success",
            "SearchStore": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "error",
            "SearchStore": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "success",
            "SearchStore": "success",
            "status": "success"
          }
        ]
      },
      "platformSpecific": {
        "binaryObjectStore": {
          "storePolicy": {
            "replicationFactor": 2
          }
        },
        "messageBroker": {
          "domains": {
            "binaryobject": {
              "topics": {
                "inboundTopic": "rdpbinaryobjectmanageinbound",
                "bulkInboundTopic": "rdpbinaryobjectmanagebulkinbound",
                "uiBulkInboundTopic": "rdpbinaryobjectmanageuibulkinbound",
                "systemInboundTopic": "rdpbinaryobjectmanagesysteminbound",
                "bulkSystemInboundTopic": "rdpbinaryobjectmanagebulksysteminbound",
                "uiBulkSystemInboundTopic": "rdpbinaryobjectmanageuibulksysteminbound",
                "hotlineInboundTopic": "rdpbinaryobjectmanagehotlineinbound",
                "migrateInboundTopic": "rdpbinaryobjectmanagemigrateinbound"
              }
            },
            "binaryobjectevent": {
              "topics": {
                "inboundTopic": "rdpeventinbound"
              }
            },
            "errorevent": {
              "topics": {
              }
            }
          }
        },
        "computeSystem": {
          "parallelisms": {
            "binaryobjectmanage-reader": 1,
            "binaryobjectmanage-reader-max-spout-pending": 10,
            "binaryobjectmanage-system-reader": 1,
            "binaryobjectmanage-system-reader-max-spout-pending": 10,
            "binaryobjectmanage-hotline-reader": 1,
            "binaryobjectmanage-hotline-reader-max-spout-pending": 10,
            "binaryobjectmanage-migrate-reader": 1,
            "binaryobjectmanage-migrate-reader-max-spout-pending": 10,
            "binaryobjectmanage-bulk-reader": 1,
            "binaryobjectmanage-bulk-reader-max-spout-pending": 10,
            "binaryobjectmanage-bulksystem-reader": 1,
            "binaryobjectmanage-bulksystem-reader-max-spout-pending": 10,
            "binaryobjectmanage-uibulk-reader": 1,
            "binaryobjectmanage-uibulk-reader-max-spout-pending": 10,
            "binaryobjectmanage-uibulksystem-reader": 1,
            "binaryobjectmanage-uibulksystem-reader-max-spout-pending": 10,
            "binaryobjectmanage-bolt": 1,
            "binaryobject-validation-bolt": 1,
            "binaryobjectmanage-eventcreate-bolt": 1,
            "binaryobjectmanage-objectcreate-bolt": 1,
            "binaryobjectmanage-searchoperation-bolt": 1,
            "binaryobjectmanage-searcheventcreate-bolt": 1,
            "noOfWorkers": 1
          }
        },
        "eventSubscribers": [
          {
            "name": "InternalEventManageSubscriber",
            "description": "Riversand Data Platform internal event connector for t1",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "binaryobjectmanagerequestsuccessevent"
              }
            ]
          },
          {
            "name": "InternalEventManageSubscriber",
            "description": "Riversand Data Platform internal event connector for t1",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "binaryobjectmanagerequesterrorevent"
              }
            ]
          }
        ],
        "restApi": {
          "actions": {
            "get": {
              "className": "com.riversand.dataplatform.ds.binaryobjectmanagesvc.BinaryObjectGetManagerBL",
              "methodName": "get"
            },
            "getById": {
              "className": "com.riversand.dataplatform.ds.binaryobjectmanagesvc.BinaryObjectGetManagerBL",
              "methodName": "getById"
            },
            "create": {
              "className": "com.riversand.dataplatform.ds.binaryobjectmanagesvc.BinaryObjectManagerBL",
              "methodName": "create"
            },
            "delete": {
              "className": "com.riversand.dataplatform.ds.binaryobjectmanagesvc.BinaryObjectManagerBL",
              "methodName": "delete"
            },
            "existsById": {
              "className": "com.riversand.dataplatform.ds.binaryobjectmanagesvc.BinaryObjectManagerBL",
              "methodName": "existsById"
            }
          }
        }
      }
    },
    "binaryStreamObjectService": {
      "serviceSpecific": {
        "logLevel": "info",
        "defaultMaxRecords": 100,
        "enableSystemInboundTopicType": false,
        "enableBulkInboundTopicType": false,
        "enableUIBulkInboundTopicType": false,
        "enableBulkSystemInboundTopicType": false,
        "enableUIBulkSystemInboundTopicType": false,
        "enableHotlineInboundTopicType": false,
        "enableMigrateInboundTopicType": true,
        "businessNamesForActors": {
          "BinaryStreamObjectManagerBL": "ApiService",
          "BinaryStreamManageObjectOperationBolt": "ObjectStore",
          "BinaryStreamManageSearchOperationBolt": "SearchStore"
        },
        "defaultDataTypes": {
          "binaryStreamDataObject": "binaryStreamObject",
          "eventDataObject": "event",
          "internalEventDataObject": "internalEvent"
        },
        "doneCriteria": [
          {
            "ApiService": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "error",
            "SearchStore": "success",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "success",
            "SearchStore": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "error",
            "SearchStore": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "ObjectStore": "success",
            "SearchStore": "success",
            "status": "success"
          }
        ]
      },
      "platformSpecific": {
        "messageBroker": {
          "domains": {
            "binarystreamobject": {
              "topics": {
                "inboundTopic": "rdpbinarystreamobjectmanageinbound",
                "bulkInboundTopic": "rdpbinarystreamobjectmanagebulkinbound",
                "uiBulkInboundTopic": "rdpbinarystreamobjectmanageuibulkinbound",
                "systemInboundTopic": "rdpbinarystreamobjectmanagesysteminbound",
                "bulkSystemInboundTopic": "rdpbinarystreamobjectmanagebulksysteminbound",
                "uiBulkSystemInboundTopic": "rdpbinarystreamobjectmanageuibulksysteminbound",
                "hotlineInboundTopic": "rdpbinarystreamobjectmanagehotlineinbound",
                "migrateInboundTopic": "rdpbinarystreamobjectmanagemigrateinbound"
              }
            },
            "binarystreamobjectevent": {
              "topics": {
                "outboundTopic": "rdpeventinbound"
              }
            },
            "errorevent": {
              "topics": {
              }
            }
          }
        },
        "computeSystem": {
          "parallelisms": {
            "binarystreamobjectmanage-reader": 1,
            "binarystreamobjectmanage-reader-max-spout-pending": 10,
            "binarystreamobjectmanage-system-reader": 1,
            "binarystreamobjectmanage-system-reader-max-spout-pending": 10,
            "binarystreamobjectmanage-hotline-reader": 1,
            "binarystreamobjectmanage-hotline-reader-max-spout-pending": 10,
            "binarystreamobjectmanage-migrate-reader": 1,
            "binarystreamobjectmanage-migrate-reader-max-spout-pending": 10,
            "binarystreamobjectmanage-bulk-reader": 1,
            "binarystreamobjectmanage-bulk-reader-max-spout-pending": 10,
            "binarystreamobjectmanage-bulksystem-reader": 1,
            "binarystreamobjectmanage-bulksystem-reader-max-spout-pending": 10,
            "binarystreamobjectmanage-uibulk-reader": 1,
            "binarystreamobjectmanage-uibulk-reader-max-spout-pending": 10,
            "binarystreamobjectmanage-uibulksystem-reader": 1,
            "binarystreamobjectmanage-uibulksystem-reader-max-spout-pending": 10,
            "binarystreamobjectmanage-bolt": 1,
            "binarystreamobject-validation-bolt": 1,
            "binarystreamobjectmanage-eventcreate-bolt": 1,
            "binarystreamobjectmanage-objectcreate-bolt": 1,
            "binarystreamobjectmanage-searchoperation-bolt": 1,
            "binarystreamobjectmanage-searcheventcreate-bolt": 1,
            "binarystream-subscriber-dispatcher-bolt": 1,
            "noOfWorkers": 1
          }
        },
        "eventSubscribers": [
          {
            "name": "BinaryStreamSubscriber",
            "description": "Riversand Data Platform internal event connector for t1",
            "active": true,
            "filters": [
              {
                "filterType": "include",
                "dataObjectType": "binarystreamobjectevent"
              }
            ]
          }
        ],
        "restApi": {
          "actions": {
            "get": {
              "className": "com.riversand.dataplatform.ds.binarystreamobjectmanagesvc.BinaryStreamObjectGetManagerBL",
              "methodName": "get"
            },
            "prepareUpload": {
              "className": "com.riversand.dataplatform.ds.binarystreamobjectmanagesvc.BinaryStreamObjectManagerBL",
              "methodName": "prepareUpload"
            },
            "prepareDownload": {
              "className": "com.riversand.dataplatform.ds.binarystreamobjectmanagesvc.BinaryStreamObjectManagerBL",
              "methodName": "prepareDownload"
            },
            "upload": {
              "className": "com.riversand.dataplatform.ds.binarystreamobjectmanagesvc.BinaryStreamObjectManagerBL",
              "methodName": "upload"
            },
            "download": {
              "className": "com.riversand.dataplatform.ds.binarystreamobjectmanagesvc.BinaryStreamObjectManagerBL",
              "methodName": "download"
            },
            "create": {
              "className": "com.riversand.dataplatform.ds.binarystreamobjectmanagesvc.BinaryStreamObjectManagerBL",
              "methodName": "create"
            },
            "delete": {
              "className": "com.riversand.dataplatform.ds.binarystreamobjectmanagesvc.BinaryStreamObjectManagerBL",
              "methodName": "delete"
            },
            "update": {
              "className": "com.riversand.dataplatform.ds.binarystreamobjectmanagesvc.BinaryStreamObjectManagerBL",
              "methodName": "update"
            },
            "objectexists": {
              "className": "com.riversand.dataplatform.ds.binarystreamobjectmanagesvc.BinaryStreamObjectManagerBL",
              "methodName": "objectExists"
            }
          }
        },
        "binaryStreamObjectStore": {
          "domains": {
            "binaryStreamDataObject": {
              "objectTypes": {
                "seedDataStream": {
                  "storageProvider": {
                    "storageProviderId": "artifactStore",
                    "configProperties": {
                      "containerName": "seed-data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "genericObjectManageService": {
      "serviceSpecific": {
        "logLevel": "info",
        "isCreateEventDataPersistenceEnabled": false,
        "defaultMaxRecords": 100,
        "requestOfRequestsDoneCriteria": {
          "genericObjectManageService": [
            {
              "description": "User Manage Complete"
            },
            {
              "description": "System Manage Complete"
            }
          ]
        },
        "enableSystemInboundTopicType": false,
        "enableBulkInboundTopicType": false,
        "enableUIBulkInboundTopicType": false,
        "enableBulkSystemInboundTopicType": false,
        "enableUIBulkSystemInboundTopicType": false,
        "enableHotlineInboundTopicType": false,
        "enableMigrateInboundTopicType": true,
        "enableBulkSystemGroomingInboundTopicType": true,
        "businessNamesForActors": {
          "GenericObjectManagerBL": "ApiService",
          "GenericObjectCompareAndPersistBolt": "SearchStore"
        },
        "doneCriteria": [
          {
            "ApiService": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "SearchStore": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "SearchStore": "success",
            "status": "success"
          }
        ]
      },
      "platformSpecific": {
        "messageBroker": {
          "domains": {
            "genericobject": {
              "topics": {
                "inboundTopic": "rdpgenericobjectmanageinbound",
                "bulkInboundTopic": "rdpgenericobjectmanagebulkinbound",
                "uiBulkInboundTopic": "rdpgenericobjectmanageuibulkinbound",
                "systemInboundTopic": "rdpgenericobjectmanagesysteminbound",
                "bulkSystemInboundTopic": "rdpgenericobjectmanagebulksysteminbound",
                "uiBulkSystemInboundTopic": "rdpgenericobjectmanageuibulksysteminbound",
                "hotlineInboundTopic": "rdpgenericobjectmanagehotlineinbound",
                "migrateInboundTopic": "rdpgenericobjectmanagemigrateinbound",
                "bulkSystemGroomingInboundTopic": "rdpgenericobjectmanagebulksystemgroominginbound"
              }
            }
          }
        },
        "computeSystem": {
          "parallelisms": {
            "genericobjectmanage-reader": 1,
            "genericobjectmanage-reader-max-spout-pending": 10,
            "genericobjectmanage-system-reader": 1,
            "genericobjectmanage-system-reader-max-spout-pending": 10,
            "genericobjectmanage-bulk-reader": 1,
            "genericobjectmanage-bulk-reader-max-spout-pending": 10,
            "genericobjectmanage-bulksystem-reader": 1,
            "genericobjectmanage-bulksystem-reader-max-spout-pending": 10,
            "genericobjectmanage-uibulk-reader": 1,
            "genericobjectmanage-uibulk-reader-max-spout-pending": 10,
            "genericobjectmanage-uibulksystem-reader": 1,
            "genericobjectmanage-uibulksystem-reader-max-spout-pending": 10,
            "genericobjectmanage-hotline-reader": 1,
            "genericobjectmanage-hotline-reader-max-spout-pending": 10,
            "genericobjectmanage-migrate-reader": 1,
            "genericobjectmanage-migrate-reader-max-spout-pending": 10,
            "genericobjectmanage-bolt": 1,
            "genericobjectmanage-compareandpersist-bolt": 2,
            "noOfWorkers": 1
          }
        },
        "restApi": {
          "actions": {
            "get": {
              "className": "com.riversand.dataplatform.ds.genericobjectmanagesvc.GenericObjectGetManagerBL",
              "methodName": "get"
            },
            "create": {
              "className": "com.riversand.dataplatform.ds.genericobjectmanagesvc.GenericObjectManagerBL",
              "methodName": "create"
            },
            "update": {
              "className": "com.riversand.dataplatform.ds.genericobjectmanagesvc.GenericObjectManagerBL",
              "methodName": "update"
            },
            "delete": {
              "className": "com.riversand.dataplatform.ds.genericobjectmanagesvc.GenericObjectManagerBL",
              "methodName": "delete"
            },
            "snapshotprocessinglag": {
              "className": "com.riversand.dataplatform.ds.genericobjectmanagesvc.GenericObjectManagerBL",
              "methodName": "snapshotProcessingLag"
            }
          }
        }
      }
    },
    "impactManageService": {
      "serviceSpecific": {
        "logLevel": "info",
        "defaultMaxRecords": 2000,
        "impactProcessConfig": {
          "enableImpactProcessing": true,
          "impactProcessFlags": {
            "businessRule": false,
            "businessCondition": false,
            "ruleContextMappings": false,
            "contentTemplateModel": false,
            "templateQualificationConfig": false,
            "authorizationModel": true
          }
        },
        "businessNamesForActors": {
          "ImpactManagerBL": "ApiService"
        },
        "doneCriteria": [
          {
            "ApiService": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "status": "success"
          }
        ]
      },
      "platformSpecific": {
        "messageBroker": {
          "domains": {
            "graphsource": {
              "topics": {
                "inboundTopic": "rdpimpactidentifyinbound"
              }
            },
            "graphtarget": {
              "topics": {
                "inboundTopic": "rdpimpactexecuteinbound"
              }
            }
          }
        },
        "restApi": {
          "actions": {
            "identify": {
              "className": "com.riversand.dataplatform.ds.entitygraphmanagesvc.ImpactManagerBL",
              "methodName": "identify"
            },
            "execute": {
              "className": "com.riversand.dataplatform.ds.entitygraphmanagesvc.ImpactManagerBL",
              "methodName": "execute"
            }
          }
        }
      }
    },
    "impactIdentifyService": {
      "serviceSpecific": {
        "logLevel": "info",
        "defaultMaxRecords": 2000,
        "businessNamesForActors": {
          "ImpactManagerBL": "ApiService"
        },
        "doneCriteria": [
          {
            "ApiService": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "status": "success"
          }
        ]
      },
      "platformSpecific": {
        "messageBroker": {
          "domains": {
            "graphsource": {
              "topics": {
                "inboundTopic": "rdpimpactidentifyinbound"
              }
            }
          }
        },
        "computeSystem": {
          "parallelisms": {
            "impactidentify-reader": 1,
            "impactidentify-reader-max-spout-pending": 10,
            "impactidentify-extractandaggregate-bolt": 1,
            "impactidentify-findentity-bolt": 1,
            "impactidentify-load-bolt": 1,
            "noOfWorkers": 1
          }
        }
      }
    },
    "impactExecuteService": {
      "serviceSpecific": {
        "logLevel": "info",
        "defaultMaxRecords": 2000,
        "businessNamesForActors": {
          "ImpactManagerBL": "ApiService"
        },
        "doneCriteria": [
          {
            "ApiService": "error",
            "status": "error"
          },
          {
            "ApiService": "success",
            "status": "success"
          }
        ]
      },
      "platformSpecific": {
        "messageBroker": {
          "domains": {
            "graphtarget": {
              "topics": {
                "inboundTopic": "rdpimpactexecuteinbound"
              }
            }
          }
        },
        "computeSystem": {
          "parallelisms": {
            "impactexecute-reader": 1,
            "impactexecute-reader-max-spout-pending": 10,
            "impactexecute-extractandaggregate-bolt": 1,
            "impactexecute-split-bolt": 1,
            "impactexecute-load-bolt": 1,
            "noOfWorkers": 1
          }
        }
      }
    },
    "matchService": {
      "serviceSpecific": {
        "logLevel": "info",
        "defaultMaxRecords": 100
      },
      "platformSpecific": {
        "restApi": {
          "actions": {
            "search": {
              "className": "com.riversand.dataplatform.ds.matchsvc.MatchManagerBL",
              "methodName": "search"
            },
            "match": {
              "className": "com.riversand.dataplatform.ds.matchsvc.MatchManagerBL",
              "methodName": "nextGenMatch"
            }
          }
        }
      }
    },
    "diagnosticService": {
      "serviceSpecific": {
        "logLevel": "info",
        "defaultMaxRecords": "1000"
      },
      "platformSpecific": {
        "restApi": {
          "actions": {
            "get": {
              "className": "com.riversand.dataplatform.ds.diagnosticsvc.DiagnosticServiceGetManagerBL",
              "methodName": "get"
            },
            "validate": {
              "className": "com.riversand.dataplatform.ds.diagnosticsvc.DiagnosticServiceGetManagerBL",
              "methodName": "validate"
            }
          }
        }
      }
    },
    "modelGovernService": {
      "serviceSpecific": {
        "logLevel": "info"
      },
      "platformSpecific": {
        "restApi": {
          "actions": {
            "validate": {
              "className": "com.riversand.dataplatform.ds.modelgovernsvc.ModelGovernManagerBL",
              "methodName": "validate"
            }
          }
        },
        "messageBroker": {},
        "computeSystem": {}
      }
    }
  },
  "storageProviders": {
    "defaultS3Store": {
      "configProperties": {
        "type": "AWS_S3",
        "S3Region": "@@S3_REGION@@",
        "S3CredentialsType": "@@S3_CREDENTIALS_TYPE@@",
        "S3AccessKey": "@@S3_ACCESS_KEY@@",
        "S3SecretKey": "@@S3_SECRET_KEY@@",
        "containerName": "dataplatform-@@ENV_NAME@@-data-store",
        "validityDurationInMins": 1440
      }
    },
    "artifactStore": {
      "configProperties": {
        "type": "Azure_Blob",
        "storageConnectionString": "DefaultEndpointsProtocol=https;AccountName=rsdeploymentfiles;AccountKey=QoKhOhwRGDmyM3ZB2hrpbjlcZv4a61fKjOws2SkjP/PAInHj0hTWoe+EUqjOIF1rg8jUMypdB47zIDll80BD3g==;EndpointSuffix=core.windows.net",
        "validityDurationInMins": 1440
      }
    },
    "defaultAzureBlobStore": {
      "configProperties": {
        "type": "Azure_Blob",
        "storageConnectionString": "@@AZURE_STORAGE_RESOURCE_CONNECTION_STRING@@",
        "containerName": "dataplatform-@@ENV_NAME@@-data-store",
        "validityDurationInMins": 1440
      }
    },
    "defaultHDFSStore": {
      "configProperties": {
        "type": "Apache_Hdfs",
        "replicationFactor": 2
      }
    },
    "defaultHbaseStore": {
      "configProperties": {
        "type": "Apache_Hbase"
      }
    }
  },
  "containers": {
    "zookeeper": {
      "nodes": [
        "@@ZOOKEEPER_SVC_LIST@@"
      ],
      "port": 2181,
      "clientSessionTimeout": 30000
    },
    "kafka": {
      "nodes": [
        "@@KAFKA_SVC_NAME@@"
      ],
      "port": 9092,
      "consumerRoot": "/consumers",
      "consumerGroup": "riversand",
      "compressionType": "snappy",
      "acks": "all",
      "maxRequestSize": 9000000
    },
    "elastic": {
      "clusterName": "@@ELASTICSEARCH_CLUSTER_NAME@@",
      "sniffingEnabled": false,
      "nodes": [
        "@@ELASTICSEARCH_SVC_LIST@@"
      ],
      "port": 9300
    },
    "gremlin": {
      "nodes": [
        "rdpgraphnode1",
        "rdpgraphnode2"
      ],
      "port": 8182
    },
    "hadoop": {
      "nodes": [
        "@@HDFS_NAMENODE_SVC_NAME@@"
      ],
      "nameNodes": [
        "hdfsnamenode1",
        "hdfsnamenode2"
      ],
      "haEnabled": "@@HDFS_HA_ENABLED@@",
      "nameServices": "hdcluster",
      "port": 8020,
      "protocol": "hdfs"
    },
    "hbase": {
      "retryLimit": 10,
      "retryInitialDelayMs": 100
    },
    "netty": {
      "nodes": [
        "@@RDP_REST_API_SVC_NAME@@"
      ],
      "restApiPrefix": "/api",
      "restHttpPort": "@@NETTY_PORT@@",
      "restSslPort": "@@NETTY_SSL_PORT@@",
      "restSslEnabled": false,
      "acceptorThreadPoolSize": 1,
      "ioThreadPoolSize": 2,
      "workerThreadPoolSize": 4,
      "maxPendingTasks": 40,
      "restClientTimeoutMs": 600000,
      "connectTimeoutMs": 60000,
      "requestTimeoutMs": 300000,
      "requestLongRunningMs": 1000,
      "metricsCheckIntervalMs": 60000
    },
    "storm": {
      "nimbusSeeds": [
        "@@NIMBUS_SEEDS@@"
      ],
      "nimbusThriftPort": "@@NIMBUS_THRIFT_PORT@@",
      "retryLimit": 10,
      "retryInitialDelayMs": 100,
      "retryDelayMultiplier": 5,
      "retryDelayMaxMs": 600000,
      "maxSpoutPending": 1000,
      "messageTimeoutSecs": 100000
    },
    "nginx": {
      "sslEnabled": true,
      "sslPort": 443,
      "httpPort": 80,
      "nodes": [
        "@@NGINX_SVC_NAME@@"
      ]
    }
  },
  "restClientConfig": {
    "socketKeepAlive": true,
    "socketTimeoutMs": 600000,
    "connectionRequestTimeoutMs": 600000,
    "connectionTimeoutMs": 5000,
    "maxConnectionTotal": 32,
    "maxConnectionsPerRoute": 4,
    "maxIdleTimeMs": 60000,
    "validateAfterInactivityMs": 5000,
    "retryInterval": 5000,
    "maxRetries": 3
  },
  "restClients": [
    {
      "clientId": "rufClient",
      "inboundTopicType": "inboundTopic"
    },
    {
      "clientId": "copClient",
      "inboundTopicType": "bulkInboundTopic"
    },
    {
      "clientId": "governanceClient",
      "inboundTopicType": "inboundTopic"
    },
    {
      "clientId": "rsdamClient",
      "inboundTopicType": "bulkInboundTopic"
    }
  ],
  "messageConfigURI": "/var/lib/rs/dataplatform/config/messageconfig.json",
  "tenantConfig": {
    "isFileServiceEnabled": false,
    "isConfigServiceEnabled": true,
    "tenantServiceConfigsURI": {
      "t1": "src/main/resources/t1-tenantserviceconfig.json",
      "t2": "src/main/resources/t2-tenantserviceconfig.json"
    }
  }
}
